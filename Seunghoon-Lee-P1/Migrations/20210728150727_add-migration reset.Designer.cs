// <auto-generated />
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using Seunghoon_Lee_P1.Models.DataLayer;

namespace Seunghoon_Lee_P1.Migrations
{
    [DbContext(typeof(P1Context))]
    [Migration("20210728150727_add-migration reset")]
    partial class addmigrationreset
    {
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "3.1.17")
                .HasAnnotation("Relational:MaxIdentifierLength", 128)
                .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

            modelBuilder.Entity("Seunghoon_Lee_P1.Models.DomainModels.Brand", b =>
                {
                    b.Property<string>("BrandId")
                        .HasColumnType("nvarchar(10)")
                        .HasMaxLength(10);

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("nvarchar(40)")
                        .HasMaxLength(40);

                    b.HasKey("BrandId");

                    b.ToTable("Brands");

                    b.HasData(
                        new
                        {
                            BrandId = "FD",
                            Name = "Fender"
                        },
                        new
                        {
                            BrandId = "GS",
                            Name = "Gibson"
                        },
                        new
                        {
                            BrandId = "PR",
                            Name = "PRS"
                        },
                        new
                        {
                            BrandId = "IB",
                            Name = "Ibanez"
                        },
                        new
                        {
                            BrandId = "SQ",
                            Name = "Squire"
                        },
                        new
                        {
                            BrandId = "MT",
                            Name = "Martin"
                        },
                        new
                        {
                            BrandId = "TL",
                            Name = "Taylor"
                        },
                        new
                        {
                            BrandId = "GR",
                            Name = "Gretch"
                        },
                        new
                        {
                            BrandId = "YM",
                            Name = "Yamaha"
                        },
                        new
                        {
                            BrandId = "EP",
                            Name = "Epiphone"
                        });
                });

            modelBuilder.Entity("Seunghoon_Lee_P1.Models.DomainModels.Category", b =>
                {
                    b.Property<string>("CategoryId")
                        .HasColumnType("nvarchar(10)")
                        .HasMaxLength(10);

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("nvarchar(40)")
                        .HasMaxLength(40);

                    b.HasKey("CategoryId");

                    b.ToTable("Categories");

                    b.HasData(
                        new
                        {
                            CategoryId = "SE",
                            Name = "Solid Body Electric Guitars"
                        },
                        new
                        {
                            CategoryId = "HE",
                            Name = "Hollow Body Electric Guitars"
                        },
                        new
                        {
                            CategoryId = "SHE",
                            Name = "Semi-Hollow Body Electric Guitars"
                        },
                        new
                        {
                            CategoryId = "A",
                            Name = "Acoustic Guitasr"
                        },
                        new
                        {
                            CategoryId = "CN",
                            Name = "Classic & Nylon guitars"
                        });
                });

            modelBuilder.Entity("Seunghoon_Lee_P1.Models.DomainModels.Inventory", b =>
                {
                    b.Property<int>("StoreId")
                        .HasColumnType("int");

                    b.Property<int>("ProductId")
                        .HasColumnType("int");

                    b.Property<int>("Quantity")
                        .HasColumnType("int");

                    b.HasKey("StoreId", "ProductId");

                    b.HasIndex("ProductId");

                    b.ToTable("Inventories");

                    b.HasData(
                        new
                        {
                            StoreId = 1,
                            ProductId = 1,
                            Quantity = 5
                        },
                        new
                        {
                            StoreId = 1,
                            ProductId = 2,
                            Quantity = 4
                        },
                        new
                        {
                            StoreId = 1,
                            ProductId = 3,
                            Quantity = 2
                        },
                        new
                        {
                            StoreId = 1,
                            ProductId = 4,
                            Quantity = 4
                        },
                        new
                        {
                            StoreId = 1,
                            ProductId = 5,
                            Quantity = 6
                        },
                        new
                        {
                            StoreId = 1,
                            ProductId = 6,
                            Quantity = 7
                        },
                        new
                        {
                            StoreId = 1,
                            ProductId = 7,
                            Quantity = 8
                        },
                        new
                        {
                            StoreId = 1,
                            ProductId = 8,
                            Quantity = 6
                        },
                        new
                        {
                            StoreId = 1,
                            ProductId = 9,
                            Quantity = 9
                        },
                        new
                        {
                            StoreId = 1,
                            ProductId = 10,
                            Quantity = 1
                        },
                        new
                        {
                            StoreId = 1,
                            ProductId = 11,
                            Quantity = 4
                        },
                        new
                        {
                            StoreId = 1,
                            ProductId = 12,
                            Quantity = 3
                        },
                        new
                        {
                            StoreId = 1,
                            ProductId = 13,
                            Quantity = 10
                        },
                        new
                        {
                            StoreId = 1,
                            ProductId = 14,
                            Quantity = 9
                        },
                        new
                        {
                            StoreId = 1,
                            ProductId = 15,
                            Quantity = 10
                        },
                        new
                        {
                            StoreId = 1,
                            ProductId = 16,
                            Quantity = 6
                        },
                        new
                        {
                            StoreId = 1,
                            ProductId = 17,
                            Quantity = 2
                        },
                        new
                        {
                            StoreId = 1,
                            ProductId = 18,
                            Quantity = 1
                        },
                        new
                        {
                            StoreId = 1,
                            ProductId = 19,
                            Quantity = 5
                        },
                        new
                        {
                            StoreId = 1,
                            ProductId = 20,
                            Quantity = 8
                        },
                        new
                        {
                            StoreId = 2,
                            ProductId = 1,
                            Quantity = 4
                        },
                        new
                        {
                            StoreId = 2,
                            ProductId = 2,
                            Quantity = 1
                        },
                        new
                        {
                            StoreId = 2,
                            ProductId = 3,
                            Quantity = 7
                        },
                        new
                        {
                            StoreId = 2,
                            ProductId = 4,
                            Quantity = 4
                        },
                        new
                        {
                            StoreId = 2,
                            ProductId = 5,
                            Quantity = 3
                        },
                        new
                        {
                            StoreId = 2,
                            ProductId = 6,
                            Quantity = 1
                        },
                        new
                        {
                            StoreId = 2,
                            ProductId = 7,
                            Quantity = 3
                        },
                        new
                        {
                            StoreId = 2,
                            ProductId = 8,
                            Quantity = 1
                        },
                        new
                        {
                            StoreId = 2,
                            ProductId = 9,
                            Quantity = 2
                        },
                        new
                        {
                            StoreId = 2,
                            ProductId = 10,
                            Quantity = 8
                        },
                        new
                        {
                            StoreId = 2,
                            ProductId = 11,
                            Quantity = 7
                        },
                        new
                        {
                            StoreId = 2,
                            ProductId = 12,
                            Quantity = 5
                        },
                        new
                        {
                            StoreId = 2,
                            ProductId = 13,
                            Quantity = 6
                        },
                        new
                        {
                            StoreId = 2,
                            ProductId = 14,
                            Quantity = 1
                        },
                        new
                        {
                            StoreId = 2,
                            ProductId = 15,
                            Quantity = 8
                        },
                        new
                        {
                            StoreId = 2,
                            ProductId = 16,
                            Quantity = 5
                        },
                        new
                        {
                            StoreId = 2,
                            ProductId = 17,
                            Quantity = 1
                        },
                        new
                        {
                            StoreId = 2,
                            ProductId = 18,
                            Quantity = 6
                        },
                        new
                        {
                            StoreId = 2,
                            ProductId = 19,
                            Quantity = 10
                        },
                        new
                        {
                            StoreId = 2,
                            ProductId = 20,
                            Quantity = 1
                        },
                        new
                        {
                            StoreId = 3,
                            ProductId = 1,
                            Quantity = 4
                        },
                        new
                        {
                            StoreId = 3,
                            ProductId = 2,
                            Quantity = 1
                        },
                        new
                        {
                            StoreId = 3,
                            ProductId = 3,
                            Quantity = 6
                        },
                        new
                        {
                            StoreId = 3,
                            ProductId = 4,
                            Quantity = 8
                        },
                        new
                        {
                            StoreId = 3,
                            ProductId = 5,
                            Quantity = 2
                        },
                        new
                        {
                            StoreId = 3,
                            ProductId = 6,
                            Quantity = 1
                        },
                        new
                        {
                            StoreId = 3,
                            ProductId = 7,
                            Quantity = 7
                        },
                        new
                        {
                            StoreId = 3,
                            ProductId = 8,
                            Quantity = 8
                        },
                        new
                        {
                            StoreId = 3,
                            ProductId = 9,
                            Quantity = 4
                        },
                        new
                        {
                            StoreId = 3,
                            ProductId = 10,
                            Quantity = 1
                        },
                        new
                        {
                            StoreId = 3,
                            ProductId = 11,
                            Quantity = 8
                        },
                        new
                        {
                            StoreId = 3,
                            ProductId = 12,
                            Quantity = 3
                        },
                        new
                        {
                            StoreId = 3,
                            ProductId = 13,
                            Quantity = 1
                        },
                        new
                        {
                            StoreId = 3,
                            ProductId = 14,
                            Quantity = 3
                        },
                        new
                        {
                            StoreId = 3,
                            ProductId = 15,
                            Quantity = 8
                        },
                        new
                        {
                            StoreId = 3,
                            ProductId = 16,
                            Quantity = 9
                        },
                        new
                        {
                            StoreId = 3,
                            ProductId = 17,
                            Quantity = 1
                        },
                        new
                        {
                            StoreId = 3,
                            ProductId = 18,
                            Quantity = 9
                        },
                        new
                        {
                            StoreId = 3,
                            ProductId = 19,
                            Quantity = 7
                        },
                        new
                        {
                            StoreId = 3,
                            ProductId = 20,
                            Quantity = 5
                        });
                });

            modelBuilder.Entity("Seunghoon_Lee_P1.Models.DomainModels.Product", b =>
                {
                    b.Property<int>("ProductId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("BrandId")
                        .IsRequired()
                        .HasColumnType("nvarchar(10)")
                        .HasMaxLength(10);

                    b.Property<string>("CategoryId")
                        .IsRequired()
                        .HasColumnType("nvarchar(10)")
                        .HasMaxLength(10);

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("nvarchar(40)")
                        .HasMaxLength(40);

                    b.Property<double>("Price")
                        .HasColumnType("float");

                    b.HasKey("ProductId");

                    b.HasIndex("BrandId");

                    b.HasIndex("CategoryId");

                    b.ToTable("Products");

                    b.HasData(
                        new
                        {
                            ProductId = 1,
                            BrandId = "GS",
                            CategoryId = "SE",
                            Name = "Les Paul Standard",
                            Price = 2499.9899999999998
                        },
                        new
                        {
                            ProductId = 2,
                            BrandId = "GS",
                            CategoryId = "SE",
                            Name = "Les Paul Classic",
                            Price = 1999.99
                        },
                        new
                        {
                            ProductId = 3,
                            BrandId = "FD",
                            CategoryId = "SE",
                            Name = "American Professional Stratocaster",
                            Price = 1499.99
                        },
                        new
                        {
                            ProductId = 4,
                            BrandId = "FD",
                            CategoryId = "SE",
                            Name = "Player Stratocaster",
                            Price = 749.99000000000001
                        },
                        new
                        {
                            ProductId = 5,
                            BrandId = "PR",
                            CategoryId = "SE",
                            Name = "SE Custom 24",
                            Price = 899.99000000000001
                        },
                        new
                        {
                            ProductId = 6,
                            BrandId = "IB",
                            CategoryId = "SE",
                            Name = "Premium S1070PBZ",
                            Price = 1399.99
                        },
                        new
                        {
                            ProductId = 7,
                            BrandId = "SQ",
                            CategoryId = "SE",
                            Name = "Affinity Series Stratocaster HH",
                            Price = 249.99000000000001
                        },
                        new
                        {
                            ProductId = 8,
                            BrandId = "MT",
                            CategoryId = "A",
                            Name = "D-28 Standard Dreadnought",
                            Price = 2999.9899999999998
                        },
                        new
                        {
                            ProductId = 9,
                            BrandId = "TL",
                            CategoryId = "A",
                            Name = "314ce-K Special Edition",
                            Price = 2799.9899999999998
                        },
                        new
                        {
                            ProductId = 10,
                            BrandId = "GR",
                            CategoryId = "HE",
                            Name = "G2420T Streamliner Single Cutaway",
                            Price = 549.99000000000001
                        },
                        new
                        {
                            ProductId = 11,
                            BrandId = "EP",
                            CategoryId = "HE",
                            Name = "Casino",
                            Price = 649.99000000000001
                        },
                        new
                        {
                            ProductId = 12,
                            BrandId = "PR",
                            CategoryId = "SHE",
                            Name = "CE 24",
                            Price = 2239.9899999999998
                        },
                        new
                        {
                            ProductId = 13,
                            BrandId = "YM",
                            CategoryId = "CN",
                            Name = "C40",
                            Price = 149.99000000000001
                        },
                        new
                        {
                            ProductId = 14,
                            BrandId = "TL",
                            CategoryId = "CN",
                            Name = "Academy 12e-N Grand Concert",
                            Price = 799.99000000000001
                        },
                        new
                        {
                            ProductId = 15,
                            BrandId = "YM",
                            CategoryId = "CN",
                            Name = "Nylon String Silent",
                            Price = 699.99000000000001
                        },
                        new
                        {
                            ProductId = 16,
                            BrandId = "FD",
                            CategoryId = "A",
                            Name = "CC-60S Concert",
                            Price = 219.99000000000001
                        },
                        new
                        {
                            ProductId = 17,
                            BrandId = "FD",
                            CategoryId = "SE",
                            Name = "2004 SRV Number 1 Tribute",
                            Price = 46999.989999999998
                        },
                        new
                        {
                            ProductId = 18,
                            BrandId = "EP",
                            CategoryId = "SE",
                            Name = "SG Traditional Pro",
                            Price = 449.99000000000001
                        },
                        new
                        {
                            ProductId = 19,
                            BrandId = "GS",
                            CategoryId = "SE",
                            Name = "Les Paul Studio",
                            Price = 1499.99
                        },
                        new
                        {
                            ProductId = 20,
                            BrandId = "FD",
                            CategoryId = "SE",
                            Name = "Player Telecaster Maple Fingerboard",
                            Price = 749.99000000000001
                        });
                });

            modelBuilder.Entity("Seunghoon_Lee_P1.Models.DomainModels.State", b =>
                {
                    b.Property<string>("StateId")
                        .HasColumnType("nvarchar(2)")
                        .HasMaxLength(2);

                    b.Property<string>("Name")
                        .HasColumnType("nvarchar(40)")
                        .HasMaxLength(40);

                    b.HasKey("StateId");

                    b.ToTable("States");

                    b.HasData(
                        new
                        {
                            StateId = "OH",
                            Name = "Ohio"
                        },
                        new
                        {
                            StateId = "MI",
                            Name = "Michigan"
                        },
                        new
                        {
                            StateId = "IN",
                            Name = "Indiana"
                        },
                        new
                        {
                            StateId = "KY",
                            Name = "Kentucky"
                        },
                        new
                        {
                            StateId = "WV",
                            Name = "West Virginia"
                        },
                        new
                        {
                            StateId = "VA",
                            Name = "Virginia"
                        },
                        new
                        {
                            StateId = "PA",
                            Name = "Pennsylvania"
                        },
                        new
                        {
                            StateId = "NY",
                            Name = "New York"
                        },
                        new
                        {
                            StateId = "NJ",
                            Name = "New Jersey"
                        },
                        new
                        {
                            StateId = "MD",
                            Name = "Maryland"
                        });
                });

            modelBuilder.Entity("Seunghoon_Lee_P1.Models.DomainModels.Store", b =>
                {
                    b.Property<int>("StoreId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("City")
                        .IsRequired()
                        .HasColumnType("nvarchar(40)")
                        .HasMaxLength(40);

                    b.Property<string>("Email")
                        .IsRequired()
                        .HasColumnType("nvarchar(40)")
                        .HasMaxLength(40);

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("nvarchar(40)")
                        .HasMaxLength(40);

                    b.Property<string>("PhoneNumber")
                        .IsRequired()
                        .HasColumnType("nvarchar(40)")
                        .HasMaxLength(40);

                    b.Property<string>("StateId")
                        .IsRequired()
                        .HasColumnType("nvarchar(2)")
                        .HasMaxLength(2);

                    b.Property<string>("Street")
                        .IsRequired()
                        .HasColumnType("nvarchar(40)")
                        .HasMaxLength(40);

                    b.HasKey("StoreId");

                    b.HasIndex("StateId");

                    b.ToTable("Stores");

                    b.HasData(
                        new
                        {
                            StoreId = 1,
                            City = "Warren",
                            Email = "ecordingly2@netscape.com",
                            Name = "LCG Ohio",
                            PhoneNumber = "330-769-3729",
                            StateId = "OH",
                            Street = "068 Village Crossing"
                        },
                        new
                        {
                            StoreId = 2,
                            City = "Detroit",
                            Email = "abreem4@mashable.com",
                            Name = "LCG Michigan",
                            PhoneNumber = "734-610-3688",
                            StateId = "MI",
                            Street = "6313 Prentice Hill"
                        },
                        new
                        {
                            StoreId = 3,
                            City = "Indianapolis",
                            Email = "lknewstub1@yandex.ru",
                            Name = "LCG Indiana",
                            PhoneNumber = "317-881-7684",
                            StateId = "IN",
                            Street = "4729 Boyd Court"
                        });
                });

            modelBuilder.Entity("Seunghoon_Lee_P1.Models.DomainModels.Inventory", b =>
                {
                    b.HasOne("Seunghoon_Lee_P1.Models.DomainModels.Product", "Product")
                        .WithMany("Inventories")
                        .HasForeignKey("ProductId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("Seunghoon_Lee_P1.Models.DomainModels.Store", "Store")
                        .WithMany("Inventories")
                        .HasForeignKey("StoreId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("Seunghoon_Lee_P1.Models.DomainModels.Product", b =>
                {
                    b.HasOne("Seunghoon_Lee_P1.Models.DomainModels.Brand", "Brand")
                        .WithMany("Products")
                        .HasForeignKey("BrandId")
                        .OnDelete(DeleteBehavior.Restrict)
                        .IsRequired();

                    b.HasOne("Seunghoon_Lee_P1.Models.DomainModels.Category", "Category")
                        .WithMany("Products")
                        .HasForeignKey("CategoryId")
                        .OnDelete(DeleteBehavior.Restrict)
                        .IsRequired();
                });

            modelBuilder.Entity("Seunghoon_Lee_P1.Models.DomainModels.Store", b =>
                {
                    b.HasOne("Seunghoon_Lee_P1.Models.DomainModels.State", "State")
                        .WithMany("Stores")
                        .HasForeignKey("StateId")
                        .OnDelete(DeleteBehavior.Restrict)
                        .IsRequired();
                });
#pragma warning restore 612, 618
        }
    }
}
